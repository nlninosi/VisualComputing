<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Presentación</title><link>https://nlninosi.github.io/showcase/docs/shortcodes/</link><description>Recent content on Presentación</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://nlninosi.github.io/showcase/docs/shortcodes/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/3D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/3D/</guid><description>Flor en coordenadas polares # Expand ↕ const fireworks = []; let gravity; let sel; let particles = []; let slider; let checkbox; let mode = &amp;#39;Explotions&amp;#39;; function setup() { createCanvas(600,600, WEBGL) angleMode(DEGREES) gravity = createVector(0, 0.2, 0); sel = createSelect(); sel.position(10, 10); sel.option(&amp;#39;Explotions&amp;#39;); sel.option(&amp;#39;Click&amp;#39;); sel.option(&amp;#39;Fireworks&amp;#39;); sel.changed(mySelectEvent); slider = createSlider(1, 255, 100); slider.position(10, 30); slider.style(&amp;#39;width&amp;#39;, &amp;#39;100px&amp;#39;); checkbox = createCheckbox(&amp;#39;Iluminacion&amp;#39;, true); } function mySelectEvent() { mode = sel.value(); } function draw() { background(240,100,10) if (checkbox.</description></item><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/coloring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/coloring/</guid><description>Coloring # Blending # Color blending is a way to mix two colors together to produce to third color. These colors are called source and destination and they are in form [R,G,B,A] where R, G, B, A ∈ [0&amp;hellip;1]. Usually we use blending to represent semi transparent objects like glass. However we can also create interesting effects by changing some parameters in the blend function.
Alpha
So far we know that the color value is a vector space element that consists of R, G and B channels and sometimes has also an alpha channel.</description></item><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/Flower3d/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/Flower3d/</guid><description>Flower # Para este ejercicio es necesario usar las coordenadas polares en el plano cartesiano como se ve en la siguiente imagen:
Imagen base Coordenadas polares a coordenadas cartesianas # Como estamos pasando de coordenadas polares a coordenadas cartesianas, sucede algo curioso, el phi que esta dentro del seno si esta valor es un numero par el numero de petalos de la flor sera la mitad de dicho numero, pero si el numero es impar el numero de petalos sera el mismo numero.</description></item><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/Histogram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/Histogram/</guid><description>Histograma # Un histograma de imagen es un tipo de histograma que actúa como una representación gráfica de la distribución tonal en una imagen digital. Representa el número de píxeles de cada valor tonal. Al observar el histograma de una imagen concreta, el espectador podrá juzgar toda la distribución tonal de un vistazo.
Nuestra implementacion del histograma se hizo de la manera siguiente:
Expand ↕ var stateR; var stateG; var stateB; var red_arr = new Array(256); var green_arr = new Array(256); var blue_arr = new Array(256); var showFilter = false; const filter = [ [-2, -1, 0], [-1, 1, 1], [0, 1, 2], ]; const filter2 = [ [-1, 0, 1], [-1, 0, 1], [-1, 0, 1], ]; var colors = new Array(3); var leftM = 30; var upM = 15; function preload() { img = loadImage(&amp;#34;/showcase/assets/1.</description></item><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/illusions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/illusions/</guid><description>Illusions # Definición del problema # Estudiar, poner en práctica y discutir las posibles aplicaciones de algunos fenómenos visuales e ilusiones ópticas conocidos.
Sustento teórico # Una ilusión óptica es cualquier ilusión del sentido de la visión que nos lleva a percibir la realidad de varias formas. Puede ser de carácter fisiológico, asociada a los efectos de una estimulación anómala o excesiva en los ojos o el cerebro o de carácter cognitivo, en las que interviene nuestro conocimiento del mundo.</description></item><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/Image-Processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/Image-Processing/</guid><description>Que es el Masking? # Uno de los procedimientos experimentales más destacados para manipular la conciencia es el enmascaramiento visual, en el que se disminuye la visibilidad de un estímulo objetivo presentándolo en estrecha proximidad espacial y temporal con una denominada &amp;ldquo;máscara&amp;rdquo;. Por ejemplo, si se presenta una imagen objetivo solamente durante períodos breves, normalmente se puede percibir sin esfuerzo. Sin embargo, si la imagen objetivo breve es seguida inmediatamente por una segunda imagen consistente en una disposición de líneas y patrones aleatorios, su visibilidad se reduce considerablemente.</description></item><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/Masking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/Masking/</guid><description>Masking # Definición del problema # Sustento teórico # Que es el Masking? # Uno de los procedimientos experimentales más destacados para manipular la conciencia es el enmascaramiento visual, en el que se disminuye la visibilidad de un estímulo objetivo presentándolo en estrecha proximidad espacial y temporal con una denominada &amp;ldquo;máscara&amp;rdquo;. Por ejemplo, si se presenta una imagen objetivo solamente durante períodos breves, normalmente se puede percibir sin esfuerzo. Sin embargo, si la imagen objetivo breve es seguida inmediatamente por una segunda imagen consistente en una disposición de líneas y patrones aleatorios, su visibilidad se reduce considerablemente.</description></item><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/Photomosaic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/Photomosaic/</guid><description> Illusions # Definición del problema # Sustento teórico # Implementación y resultados # Exercises
Implement your own source dataset and a mechanism to select different images from it.
Implement a pixelator in software that doesn’t use spatial coherence and compare the results with those obtained here.
Conclusiones y trabajo a futuro #</description></item><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/SpatialCoherence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/SpatialCoherence/</guid><description> Illusions # Definición del problema # Sustento teórico # Implementación y resultados # Exercises
Implement your own source dataset and a mechanism to select different images from it.
// Implement a pixelator in software that doesn’t use spatial coherence and compare the results with those obtained here.
Conclusiones y trabajo a futuro #</description></item><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/Texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/Texturing/</guid><description>Illusions # Definición del problema # Sustento teórico # Implementación y resultados # Exercise Redefine the shape texture coordinates to turn the above image upside down.
Exercises Include the blue channel in the uv visualization (e.g., use blue with red or green channels).
Exercises Implement other coloring brightness tools such as HSV value V, HSL lightness L or Component average. Implement texture tinting by mixing color and texel interpolated data.</description></item></channel></rss>