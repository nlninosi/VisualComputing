<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Presentación</title><link>https://nlninosi.github.io/showcase/docs/shortcodes/Shaders/</link><description>Recent content on Presentación</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://nlninosi.github.io/showcase/docs/shortcodes/Shaders/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/Shaders/coloring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/Shaders/coloring/</guid><description>Coloring # Blending # Color blending is a way to mix two colors together to produce to third color. These colors are called source and destination and they are in form [R,G,B,A] where R, G, B, A ∈ [0&amp;hellip;1]. Usually we use blending to represent semi transparent objects like glass. However we can also create interesting effects by changing some parameters in the blend function.
Alpha
So far we know that the color value is a vector space element that consists of R, G and B channels and sometimes has also an alpha channel.</description></item><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/Shaders/Image-Processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/Shaders/Image-Processing/</guid><description>Que es el Masking? # Uno de los procedimientos experimentales más destacados para manipular la conciencia es el enmascaramiento visual, en el que se disminuye la visibilidad de un estímulo objetivo presentándolo en estrecha proximidad espacial y temporal con una denominada &amp;ldquo;máscara&amp;rdquo;. Por ejemplo, si se presenta una imagen objetivo solamente durante períodos breves, normalmente se puede percibir sin esfuerzo. Sin embargo, si la imagen objetivo breve es seguida inmediatamente por una segunda imagen consistente en una disposición de líneas y patrones aleatorios, su visibilidad se reduce considerablemente.</description></item><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/Shaders/procedural_texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/Shaders/procedural_texturing/</guid><description>Procedural Texturing # El objetivo de la texturización procesal es generar una textura mediante un algoritmo de tal manera que el resultado se pueda asignar a una forma como textura. La textura de procedimiento requiere el uso de un objeto de búfer de cuadro que en p5.js se implementa como un objeto p5.Graphics.
Offset patterns: # Un ejemplo de un patron compensado (offset patterns) es un muro de ladrillos, donde por cada fila alterna tenemos un ladrillo desplazado en el eje x.</description></item><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/Shaders/SpatialCoherence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/Shaders/SpatialCoherence/</guid><description> Spatial Coherence # Nuestra implementacion del pixelador usa coherencia espacial para submuestrear una imagen y de esta manera convertirlo es un texel. Nuestra implementacion tambien permite cambiar las dimensiones de los pixeles, el primer slider altera el ancho de los pixeles, mientras que el segundo el alto. Ademas de incluir nuestro propio dataset de imagenes.
// Conclusiones y trabajo a futuro #</description></item><item><title/><link>https://nlninosi.github.io/showcase/docs/shortcodes/Shaders/Texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nlninosi.github.io/showcase/docs/shortcodes/Shaders/Texturing/</guid><description>Texturing # Texturing es la manera de cómo se sitúa una textura (Una imagen) sobre un objeto al momento de proyectarse sobre un objeto. De este modo, un objeto obtiene una textura superficial similar a la de una superficie bidimensional. Es el equivalente digital de empapelar, pintar o cubrir cualquier superficie y por lo general es aplicada a objetos 3D.
Uv space # Los shaders que vamos a utilizar un el mapeado UV, donde se asigna una coordenada para cada vértice del objeto que más adelante se va a texturizar.</description></item></channel></rss>